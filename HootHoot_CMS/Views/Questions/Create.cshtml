@model HootHoot_CMS.Models.Questions

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Questions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.station_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("station_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.station_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.question_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.question_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("question_type", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.question_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("option_type", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.option_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_1, "", new { @class = "text-danger" })
                <input type="file" name="option1_img" />
                <input type="button" id="testUpload" value="Add Images for Option 1" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_2, "", new { @class = "text-danger" })
                <input type="file" name="option2_img" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_3, "", new { @class = "text-danger" })
                <input type="file" name="option3_img" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_4, "", new { @class = "text-danger" })
                <input type="file" name="option4_img" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correct_option, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correct_option, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correct_option, "", new { @class = "text-danger" })

                <select id="ddl_CorrectOption">
                    <option value="Option1">Option 1</option>
                    <option value="Option2">Option 2</option>
                    <option value="Option3">Option 3</option>
                    <option value="Option4">Option 4</option>
                </select>
                <img src="" alt="Correct Option Preview" id="imgCorrectOpt_Preview" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.answering_duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.answering_duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.answering_duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(
            function () {
                $("[name='option1_img']").hide();
                $("[name='option2_img']").hide();
                $("[name='option3_img']").hide();
                $("[name='option4_img']").hide();

                $("#option_type").change(function () {
                    var selectedOptionType = $("#option_type option:selected").text();
                    //alert("Selected Value: " + selectedOptionType);

                    if (selectedOptionType == "IMAGE") {
                        alert("IMG is SELECTED!!!");
                        //Perform some IMG logic here
                        $("[name='option1_img']").show();
                        $("[name='option2_img']").show();
                        $("[name='option3_img']").show();
                        $("[name='option4_img']").show();

                        $("#ddl_CorrectOption").change(function () {
                            var gDragon = $("#ddl_CorrectOption option:selected").val();

                            if (gDragon == "Option1") {
                                //alert("Picture TEXT Name: " + $("[name='option1_img']").text());
                                alert("Picture Value Name: " + $("[name='option1_img']").val());
                                //$("#imgCorrectOpt_Preview").attr("src", $("[name='option1_img']").val());
                                //$("#imgCorrectOpt_Preview").attr("src", "http://i.telegraph.co.uk/multimedia/archive/03571/potd-squirrel_3571152k.jpg");
                                //"file:///C:/Users/User/Pictures/Ver%20Ka.jpg"

                                $("#imgCorrectOpt_Preview").attr("src", "file:///C:/Users/Public/Pictures/Sample%20Pictures/Chrysanthemum.jpg");
                            }

                        });

                        return;
                    }

                    $("[name='option1_img']").hide();
                    $("[name='option2_img']").hide();
                    $("[name='option3_img']").hide();
                    $("[name='option4_img']").hide();


                    // Variable to store your files
                    var files;

                    // Add events
                    $("[name='option1_img']").on('change', prepareUpload);

                    $("#testUpload").click(function () {
                        //Trigger the first image option input to open the select file dialog
                        $("[name='option1_img']").click();

                    });

                    // Grab the files and set them to our variable
                    function prepareUpload(event) {
                        files = event.target.files;

                        if (typeof files !== 'undefined' && files.length > 0) {
                            //This represents that the user selects a file to upload
                            //We shall start uploading the file
                            uploadFiles();
                        }
                    }

                    // Catch the form submit and upload the files
                    function uploadFiles() {
             

                        /*event.stopPropagation(); // Stop stuff happening
                        event.preventDefault(); // Totally stop stuff happening*/

                        // START A LOADING SPINNER HERE

                        // Create a formdata object and add the files
                        var data = new FormData();
                        $.each(files, function (key, value) {
                            data.append(key, value);
                        });

                        $.ajax({
                            url: '../../FileUpload/Upload',
                            type: 'POST',
                            data: data,
                            cache: false,
                            dataType: 'json',
                            processData: false, // Don't process the files
                            contentType: false, // Set content type to false as jQuery will tell the server its a query string request
                            success: function (data, textStatus, jqXHR) {
                                if (data != "Error ") {
                                    console.log('SUCCESSFULLY UPLOADED : ' + data.files[0].name + '\t Size: ' + data.files[0].size);
                                    // Success so call function to process the form
                                    //submitForm(event, data);

                                }
                                else {
                                    // Handle errors here
                                    console.log('ERRORS: ');
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                // Handle errors here
                                console.log('ERRORS: ' + textStatus);
                                // STOP LOADING SPINNER
                            }
                        });
                    }



                });//End optionType change event
            });
    </script>
}
